@{
Layout = "~/Views/Shared/_Layout.cshtml";
ViewData["Title"] = "Finans Organizasyon";
}

<h3 style="margin-bottom: 20px;">Finans Departmanı Organizasyon Şeması</h3>
<div id="treeDiagram" style="width: 100%; height: 600px; border: 1px solid gray;"></div>

@section Scripts {
<script src="https://cdnjs.cloudflare.com/ajax/libs/gojs/2.3.15/go.js"></script>
<script src="https://cdnjs.cloudflare.com/ajax/libs/PapaParse/5.3.2/papaparse.min.js"></script>

<script>
async function loadCSVandRenderTree() {
  const response = await fetch('/data/company.csv');
  const csvText = await response.text();

  const rawData = Papa.parse(csvText, {
    header: true,
    skipEmptyLines: true
  }).data;

  // Finans'la ilgili olan düğümleri ve onların parent zincirini al
  const isFinanceNode = (node) => node.text.includes("Finans");
  const nodesToInclude = new Set();

  function includeNodeAndParents(node, allNodesMap) {
    while (node && !nodesToInclude.has(node.key)) {
      nodesToInclude.add(node.key);
      node = allNodesMap[node.parent];
    }
  }

  const nodeMap = {};
  rawData.forEach(n => { nodeMap[n.key] = n; });

  rawData.forEach(node => {
    if (isFinanceNode(node)) {
      includeNodeAndParents(node, nodeMap);
    }
  });

  const filteredData = rawData.filter(n => nodesToInclude.has(n.key));

  const $ = go.GraphObject.make;
  const myDiagram = $(go.Diagram, "treeDiagram", {
    layout: $(go.TreeLayout, {
      angle: 90,
      alignment: go.TreeLayout.AlignmentCenterChildren,
      layerSpacing: 20,
      nodeSpacing: 15
    }),
    initialAutoScale: go.Diagram.Uniform
  });

  myDiagram.nodeTemplate =
    $(go.Node, "Auto",
      $(go.Shape, "RoundedRectangle", { fill: "lightblue", width: 60, height: 180 }),
      $(go.TextBlock, {
        margin: 10,
        font: "bold 12px sans-serif",
        stroke: "black",
        wrap: go.TextBlock.WrapFit,
        width: 160,
        angle: 270,
        textAlign: "center"
      }, new go.Binding("text", "text"))
    );

  myDiagram.model = new go.TreeModel(filteredData);
}

window.addEventListener("DOMContentLoaded", loadCSVandRenderTree);
</script>
}